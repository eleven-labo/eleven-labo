generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model Comment {
  id            Int                  @id @default(autoincrement())
  postId        Int
  post          Post                 @relation(fields: [postId], references: [id])
  comment       String               @default("")
  authorId      String
  author        User                 @relation(fields: [authorId], references: [id])
  createdAt     DateTime             @default(now())
  likeHistories CommentLikeHistory[]
}

model CommentLikeHistory {
  id        Int      @id @default(autoincrement())
  commentId Int
  comment   Comment  @relation(fields: [commentId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())

  @@unique(fields: [commentId, userId])
}

model Player {
  id         Int      @id
  name       String
  age        Int?
  number     Int?
  position   Position
  photo      String
  teamId     Int
  team       Team     @relation(fields: [teamId], references: [id])
  pos1Posts  Post[]   @relation("pos1Posts")
  pos2Posts  Post[]   @relation("pos2Posts")
  pos3Posts  Post[]   @relation("pos3Posts")
  pos4Posts  Post[]   @relation("pos4Posts")
  pos5Posts  Post[]   @relation("pos5Posts")
  pos6Posts  Post[]   @relation("pos6Posts")
  pos7Posts  Post[]   @relation("pos7Posts")
  pos8Posts  Post[]   @relation("pos8Posts")
  pos9Posts  Post[]   @relation("pos9Posts")
  pos10Posts Post[]   @relation("pos10Posts")
  pos11Posts Post[]   @relation("pos11Posts")
}

enum Position {
  Goalkeeper
  Defender
  Midfielder
  Attacker
}

model Post {
  id            Int                @id @default(autoincrement())
  description   String             @default("")
  formationCode String             @default("4-4-2")
  pos1PlayerId  Int
  pos1Player    Player             @relation("pos1Posts", fields: [pos1PlayerId], references: [id])
  pos2PlayerId  Int
  pos2Player    Player             @relation("pos2Posts", fields: [pos2PlayerId], references: [id])
  pos3PlayerId  Int
  pos3Player    Player             @relation("pos3Posts", fields: [pos3PlayerId], references: [id])
  pos4PlayerId  Int
  pos4Player    Player             @relation("pos4Posts", fields: [pos4PlayerId], references: [id])
  pos5PlayerId  Int
  pos5Player    Player             @relation("pos5Posts", fields: [pos5PlayerId], references: [id])
  pos6PlayerId  Int
  pos6Player    Player             @relation("pos6Posts", fields: [pos6PlayerId], references: [id])
  pos7PlayerId  Int
  pos7Player    Player             @relation("pos7Posts", fields: [pos7PlayerId], references: [id])
  pos8PlayerId  Int
  pos8Player    Player             @relation("pos8Posts", fields: [pos8PlayerId], references: [id])
  pos9PlayerId  Int
  pos9Player    Player             @relation("pos9Posts", fields: [pos9PlayerId], references: [id])
  pos10PlayerId Int
  pos10Player   Player             @relation("pos10Posts", fields: [pos10PlayerId], references: [id])
  pos11PlayerId Int
  pos11Player   Player             @relation("pos11Posts", fields: [pos11PlayerId], references: [id])
  likeHistories PosttLikeHistory[]
  themeId       Int
  theme         Theme              @relation(fields: [themeId], references: [id])
  comments      Comment[]
  authorId      String
  author        User               @relation(fields: [authorId], references: [id])
  createdAt     DateTime           @default(now())
}

model PosttLikeHistory {
  id        Int      @id @default(autoincrement())
  postId    Int
  post      Post     @relation(fields: [postId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())

  @@unique(fields: [postId, userId])
}

model Theme {
  id            Int                 @id @default(autoincrement())
  title         String
  thumbnail     String              @default("")
  posts         Post[]
  likeHistories ThemetLikeHistory[]
  createdAt     DateTime            @default(now())
}

model ThemetLikeHistory {
  id        Int      @id @default(autoincrement())
  themeId   Int
  theme     Theme    @relation(fields: [themeId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())

  @@unique(fields: [themeId, userId])
}

model Team {
  id              Int      @id
  name            String
  code            String
  logo            String
  backgroundColor String   @default("#FFFFFF")
  color           String   @default("#000000")
  borderColor     String   @default("#000000")
  textShadowColor String?
  createdAt       DateTime @default(now())
  player          Player[]
}

model User {
  id                   String               @unique
  firstName            String?              @default("")
  lastName             String?              @default("")
  username             String?              @default("")
  hasImage             Boolean
  imageUrl             String
  comments             Comment[]
  posts                Post[]
  commentLikeHistories CommentLikeHistory[]
  posttLikeHistories   PosttLikeHistory[]
  themetLikeHistories  ThemetLikeHistory[]
  createdAt            DateTime             @default(now())
  deletedAt            DateTime?
}
